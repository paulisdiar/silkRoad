#BlueJ class context
comment0.target=SRCalculator
comment0.text=\r\n\ This\ class\ is\ in\ charge\ of\ all\ calculation\ and\ utility\ methods\ of\ the\ simulator\r\n\ \r\n\ @author\ Paula\ D\u00EDaz\r\n\ @author\ Juan\ Pablo\ V\u00E9lez\r\n\ @version\ 4\r\n
comment1.params=
comment1.target=SRCalculator()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ SRCalculator\r\n
comment10.params=stores
comment10.target=int\ determineTotal(java.util.ArrayList)
comment10.text=\r\n\ Determines\ the\ maximum\ profit\ posible\ to\ gain\r\n\ @param\ Arraylist<Store>\ stores\r\n\ @return\ int\r\n
comment2.params=isH
comment2.target=int[]\ determineCoordinates(boolean)
comment2.text=\r\n\ Determines\ coordinates\ of\ the\ block\ knowing\ if\ its\ horizontal\ or\ vertical.\ Also\ it\ is\ an\ accumulation\ process\r\n\ @param\ boolean\ isH\r\n\ @return\ int[]\r\n
comment3.params=
comment3.target=boolean\ isHorizontal()
comment3.text=\r\n\ Gives\ the\ actual\ value\ of\ the\ isHorizontal\ atribute\r\n\ @return\ boolean\r\n
comment4.params=array
comment4.target=int[][]\ orderArray(int[][])
comment4.text=\r\n\ Orders\ the\ given\ array\ by\ column,\ from\ smallest\ to\ biggest\r\n\ @param\ int[][]\ array\r\n\ @return\ int[][]\r\n
comment5.params=elements
comment5.target=int\ determineLength(int[][])
comment5.text=\r\n\ Determines\ the\ length\ of\ the\ silkRoad\ based\ on\ the\ information\ given\ by\ the\ elements\r\n\ @param\ int[][]\r\n\ return\ int\r\n
comment6.params=robots
comment6.target=int\ determineMaxMovements(java.util.ArrayList)
comment6.text=\r\n\ Determines\ max\ movements\ done\ between\ robots\r\n\ @param\ ArrayList<Robot>\ robots\r\n\ @return\ int\r\n
comment7.params=robots
comment7.target=Robot\ searchMaxProfitRobot(java.util.ArrayList)
comment7.text=\r\n\ Searches\ the\ robot\ who\ has\ gained\ the\ maximum\ profit\r\n\ @param\ ArrayList<Robot>\ robots\r\n\ @return\ Robot\r\n
comment8.params=robots\ stores
comment8.target=determineMoves(java.util.ArrayList,\ java.util.ArrayList)
comment8.text=\r\n\ Determines\ the\ optimum\ moves\ the\ robots\ must\ do\ to\ maximize\ the\ profit\r\n\ @param\ ArrayList<Robot\r\n\ @param\ ArrayList<Store>\ stores\r\n\ @return\ ArrayList<int[]>\r\n
comment9.params=array
comment9.target=int[]\ determineMinimum(int[][])
numComments=11
